# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CD with Gradle

on:
  issue_comment:
    types: [ created, edited ]

jobs:
  deploy:
    if: github.event.issue.pull_request && contains(github.event.comment.body, '/Ïø†ÌÉÄÎ≤ÑÏä§') && contains(github.event.comment.body, 'Î∞∞Ìè¨')
    runs-on: ubuntu-latest
    permissions:
      write-all
    #contents: read
    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: testdb
          MYSQL_ROOT_PASSWORD: testdb
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

        # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
        # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      # SQL Ïä§ÌÅ¨Î¶ΩÌä∏ Ïã§Ìñâ
      - name: Run MySQL Init Script
        run: |
          mysql -h 127.0.0.1 -u root -ptestdb testdb < ./infra/sql/user.sql

      - name: Build with Gradle Wrapper
        env:
          SPRING_R2DBC_URL: r2dbc:pool:mysql://localhost:3306/testdb
          SPRING_R2DBC_PASSWORD: testdb
          MONGO_URL: ${{ secrets.MONGO_URL }}
        run: ./gradlew build

        # dockerfileÏùÑ ÌÜµÌï¥ Ïù¥ÎØ∏ÏßÄÎ•º ÎπåÎìúÌïòÍ≥†, Ïù¥Î•º docker repoÎ°ú push
      - name: Docker build & push to docker repo
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f ./infra/docker/Dockerfile -t ${{ secrets.DOCKER_REPO }} .
          docker push ${{ secrets.DOCKER_REPO }}

      # appleboy/ssh-action@master Ïï°ÏÖòÏùÑ ÏÇ¨Ïö©ÌïòÏó¨ ÏßÄÏ†ïÌïú ÏÑúÎ≤ÑÏóê sshÎ°ú Ï†ëÏÜçÌïòÍ≥†, scriptÎ•º Ïã§ÌñâÌï©ÎãàÎã§.
      # scriptÏùò ÎÇ¥Ïö©ÏùÄ ÎèÑÏª§Ïùò Í∏∞Ï°¥ ÌîÑÎ°úÏÑ∏Ïä§Îì§ÏùÑ Ï†úÍ±∞ÌïòÍ≥†, docker repoÎ°úÎ∂ÄÌÑ∞ Î∞©Í∏à ÏúÑÏóêÏÑú pushÌïú ÎÇ¥Ïö©ÏùÑ pull Î∞õÏïÑ Ïã§ÌñâÌïòÎäî Í≤ÉÏûÖÎãàÎã§.
      # Ïã§Ìñâ Ïãú, docker-composeÎ•º ÏÇ¨Ïö©Ìï©ÎãàÎã§.
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        env:
          COMPOSE: ${{ secrets.DOCKER_PATH }}
        id: deploy
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          port: 22
          key: ${{ secrets.KEY }}
          envs: GITHUB_SHA
          script: |
            sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            echo ${{secrets.PROJECT_PATH}}
            cd ${{secrets.PROJECT_PATH}}
            cd ..
            cd ..
            git pull origin main
            cd ${{secrets.PROJECT_PATH}}
            sudo docker-compose stop
            
            sudo docker rm $(sudo docker ps -a -q)
            sudo docker rmi $(sudo docker images -q )
            sudo docker pull ${{ secrets.DOCKER_REPO }}
            
            sudo docker-compose up --build -d

      - name: Notify
        uses: actions/github-script@v5
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'üåé Î∞∞Ìè¨ÌïòÏòÄÏäµÎãàÎã§.'
            })

      - name: add label
        uses: actions-ecosystem/action-add-labels@v1
        with:
          labels: ":satellite: ÏûêÎèô Î∞∞Ìè¨"